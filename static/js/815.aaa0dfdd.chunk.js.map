{"version":3,"file":"static/js/815.aaa0dfdd.chunk.js","mappings":"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","sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://tes/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://tes/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__DVKcL\"};","import React, { useEffect, useState } from 'react';\r\n\r\nexport const ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(()=>{\r\n        setStatus(props.status);\r\n    },[props.status])\r\n\r\n    let activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    let deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChange=(e)=>{\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div >\r\n                    <span onDoubleClick={activateEditMode}> {props.status || \"-----\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div >\r\n                    <input\r\n                        autoFocus={true} \r\n                        onBlur={deactivateEditMode}\r\n                        onChange={onStatusChange}\r\n                        value={status}\r\n                    />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\n//import {ProfileStatus} from './ProfileStatus';\r\nimport { ProfileStatusWithHooks } from './ProfileStatusWithHooks';\r\n\r\nexport const ProfileInfo = ({profile,status,updateStatus}) => {\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n  return (\r\n    <div >\r\n      <div className={s.descriptionBlock}>\r\n        <img alt='789' src={profile.photos.large} />\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__JhhaD\",\"posts\":\"MyPosts_posts__0OgGU\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__mmRHg\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nexport const Post = (props) => {\r\n return (\r\n\r\n            <div className={s.item}>\r\n              <img alt='123' src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQrV5FwfY_rhAJ68NuJdR3Fy_smBGmMYup8Mw&usqp=CAU\" />\r\n              {props.message}\r\n              <div>\r\n              <span>{props.likesCount}</span>\r\n              </div>\r\n            </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport { Post } from './Post/Post';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormControls/FormsControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nexport const MyPosts = React.memo(props => {\r\n  /* componentDidMount(){\r\n    setTimeout(()=>{\r\n      this.setState({a:12});\r\n    },3000);\r\n  }*/\r\n  /*shouldComponentUpdate(nextProps,nextState){    \r\n    return nextProps!==this.props ||\r\n      nextState!==this.state;\r\n  }*/\r\n\r\n  let posts = [...props.posts]\r\n    .reverse()\r\n    .map((item, i) => <Post message={item.message} likesCount={item.likesCount} key={i} />);\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <AddNewPostFormRedux onSubmit={onAddPost} />\r\n      <div className={s.posts}>\r\n        {posts}\r\n      </div>\r\n    </div>\r\n  )\r\n});\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field name=\"newPostText\"\r\n          component={Textarea} placeholder=\"Post message\"\r\n          validate={[required, maxLength10]} />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({ form: \"ProfileAddNewPostForm\" })(AddNewPostForm);","import { addPostActionCreator/*,updateNewPostTextActionCreator*/ } from '../../../redux/profile-reducer';\r\nimport { MyPosts } from './MyPosts';\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps=(state)=>{\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  };\r\n}\r\n\r\nlet mapDispatchToProps=(dispatch)=>{\r\n  return {\r\n    /*updateNewPostText: (text)=>{\r\n      let action=updateNewPostTextActionCreator(text);\r\n      dispatch(action);\r\n    },*/\r\n    addPost: (newPostText)=>{\r\n      dispatch(addPostActionCreator(newPostText));\r\n    }\r\n  };\r\n}\r\n\r\nexport const MyPostsContainer=connect(mapStateToProps,mapDispatchToProps)(MyPosts);","import React from 'react';\r\nimport { ProfileInfo } from './ProfileInfo/ProfileInfo';\r\nimport { MyPostsContainer } from './MyPosts/MyPostsContainer';\r\n\r\nexport const Profile = (props) => {  \r\n  return (\r\n    <div>\r\n    <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n    <MyPostsContainer  />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Profile } from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile,getStatus,updateStatus } from '../../redux/profile-reducer';\r\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\r\n//import { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nfunction withRouter(Component) {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{ location, navigate, params }}\r\n            />\r\n        );\r\n    }\r\n    return ComponentWithRouterProp;\r\n}\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.router.params.userId;\r\n        if (userId === \":userId\" || !userId) \r\n            userId = this.props.authorizedUserId; //25318; //2;\r\n            if(!userId){                                            \r\n                this.props.router.navigate(\"/login\"); // in code navigate\r\n            }\r\n\r\n        this.props.getUserProfile(userId);\r\n        //setTimeout(()=>{\r\n        //    this.props.getStatus(userId);\r\n        //},1000);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} \r\n                profile={this.props.profile} \r\n                status={this.props.status} \r\n                updateStatus={this.props.updateStatus} />\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status:state.profilePage.status,\r\n    authorizedUserId:state.auth.userId,\r\n    isAuth:state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n    withRouter//,\r\n    //withAuthRedirect\r\n)(ProfileContainer);\r\n"],"names":["ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileInfo","profile","className","s","alt","src","photos","large","Preloader","Post","message","likesCount","maxLength10","maxLengthCreator","MyPosts","React","posts","reverse","map","item","i","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","router","params","authorizedUserId","navigate","getUserProfile","getStatus","compose","auth","isAuth","Component","location","useLocation","useNavigate","useParams"],"sourceRoot":""}