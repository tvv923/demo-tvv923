{"version":3,"file":"static/js/193.0b8c24cf.chunk.js","mappings":"oKACA,GAAgB,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,2B,mBCG/HA,EAAa,SAACC,GACzB,IAAIC,EAAK,YAAYD,EAAME,GAC3B,OACE,gBAAKC,UAAWC,EAAAA,OAAS,IAAIA,EAAAA,OAA7B,UACI,SAAC,KAAD,CAASC,GAAIJ,EAAb,SAAoBD,EAAMM,UCLrBC,EAAU,SAACP,GAEtB,OACE,gBAAKG,UAAWC,EAAAA,OAAhB,SAA2BJ,EAAMQ,W,uCCD/BC,GAAYC,EAAAA,EAAAA,GAAiB,IAiBtBC,GAAsBC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,wBAAlBD,EAfZ,SAACZ,GACtB,OACE,iBAAMc,SAAUd,EAAMe,aAAtB,UACE,4BACE,0BAAK,SAACC,EAAA,EAAD,CAAOC,UAAWC,EAAAA,GACrBC,SAAU,CAACC,EAAAA,EAASX,GACpBH,KAAK,iBACLe,YAAY,sBAEd,0BAAK,+C,qECZTC,EAA6B,SAACC,GAAD,MAAY,CAC3CC,OAAOD,EAAME,KAAKD,SCkBdE,GAAiBC,E,QAAAA,KACrBC,EAAAA,EAAAA,KAlBkB,SAACL,GACnB,MAAO,CACLM,YAAaN,EAAMM,gBAIA,SAACC,GACtB,MAAO,CAILC,YAAa,SAACC,GACZF,GAASG,EAAAA,EAAAA,GAAmBD,UDVF,SAACE,GAAe,IACxCC,EADuC,0IAE3C,WACI,OAAIC,KAAKpC,MAAMwB,QACR,SAACU,GAAD,UAAeE,KAAKpC,SADG,SAAC,KAAD,CAAUK,GAAG,eAHJ,GACbgC,EAAAA,WAWhC,OAHqCT,EAAAA,EAAAA,IAAQN,EAARM,CAAoCO,KCMpDR,ECdA,SAAC3B,GAEtB,IAAIuB,EAAQvB,EAAM6B,YAEdS,EAAkBf,EAAMgB,YAAYC,KAAI,SAACC,EAAMC,GAAP,OAAa,SAAC3C,EAAD,CAAYO,KAAMmC,EAAKnC,KAAMJ,GAAIuC,EAAKvC,IAASuC,EAAKvC,OACzGyC,EAAmBpB,EAAMqB,aAAaJ,KAAI,SAACC,EAAMC,GAAP,OAAa,SAACnC,EAAD,CAASC,QAASiC,EAAKjC,SAAckC,MAQhG,OACE,iBAAKvC,UAAWC,EAAAA,QAAhB,WACE,gBAAKD,UAAWC,EAAAA,aAAhB,SACGkC,KAEH,gBAAKnC,UAAWC,EAAAA,SAAhB,UACE,yBAAMuC,OAGR,SAAChC,EAAD,CAAqBG,SAfL,SAAC+B,GACnB7C,EAAM+B,YAAYc,EAAOb,yBDW7B","sources":["webpack://tes/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","components/Dialogs/Dialogs.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__eYukr\",\"dialogsItems\":\"Dialogs_dialogsItems__TA1b7\",\"active\":\"Dialogs_active__EZldA\",\"messages\":\"Dialogs_messages__ysZQc\"};","import React from 'react'\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nexport const DialogItem = (props) => {\r\n  let path='/dialogs/'+props.id;\r\n  return (    \r\n    <div className={s.dialog+' '+s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>    \r\n    </div>\r\n  )\r\n};\r\n\r\n","import React from 'react'\r\nimport s from './../Dialogs.module.css';\r\n\r\nexport const Message = (props) => {\r\n  \r\n  return (    \r\n    <div className={s.dialog}>{props.message}</div>\r\n  )\r\n};\r\n\r\n\r\n","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required,maxLengthCreator } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormControls/FormsControls';\r\n\r\nconst maxLength50=maxLengthCreator(50);\r\n\r\nconst addMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <div><Field component={Textarea}\r\n          validate={[required,maxLength50]}\r\n          name=\"newMessageBody\"\r\n          placeholder=\"Enter message:\" />\r\n        </div>\r\n        <div><button >Send</button></div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport const AddMessageFormRedux = reduxForm({ form: \"dialogAddMessageForm\" })(addMessageForm)","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Navigate } from 'react-router'\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({    \r\n  isAuth:state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n        if(!this.props.isAuth) return <Navigate to='/login' />\r\n        return <Component {...this.props} />\r\n    }\r\n  }\r\n\r\n  \r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n}\r\n","import { /*updateNewMessageBodyCreator,*/ sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport { Dialogs } from './Dialogs';\r\nimport {connect} from \"react-redux\";\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps=(state)=>{\r\n  return {\r\n    dialogsPage: state.dialogsPage  \r\n  };\r\n}\r\n\r\nlet mapDispatchToProps=(dispatch)=>{\r\n  return {\r\n   // updateNewMessageBody: (body)=>{\r\n   //   dispatch(updateNewMessageBodyCreator(body));\r\n   // },\r\n    sendMessage: (newMessageBody)=>{\r\n      dispatch(sendMessageCreator(newMessageBody));\r\n    }\r\n  };\r\n}\r\n\r\nconst DialogsContainer=compose(\r\n  connect(mapStateToProps,mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs)\r\n\r\nexport default DialogsContainer;","import React from 'react'\r\nimport s from './Dialogs.module.css';\r\nimport { DialogItem } from './DialogItem/DialogItem';\r\nimport { Message } from './Message/Message';\r\n//import { Field, reduxForm } from 'redux-form';\r\n//import { Textarea } from '../common/FormControls/FormsControls';\r\n//import { maxLengthCreator, required } from '../../utils/validators/validators';\r\nimport { AddMessageFormRedux } from './AddMessageForm/AddMessageForm';\r\n\r\nexport const Dialogs = (props) => {\r\n\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsElements = state.dialogsData.map((item, i) => <DialogItem name={item.name} id={item.id} key={item.id} />);\r\n  let messagesElements = state.messagesData.map((item, i) => <Message message={item.message} key={i} />);\r\n\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody)\r\n  };\r\n\r\n  //if(!props.isAuth) return <Navigate to={'/login'}/>\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>\r\n        {dialogsElements}\r\n      </div>\r\n      <div className={s.messages}>\r\n        <div>{messagesElements}</div>\r\n\r\n      </div>\r\n      <AddMessageFormRedux onSubmit={addNewMessage} />\r\n    </div>\r\n  )\r\n}\r\n\r\n/*const maxLength50=maxLengthCreator(50);\r\n\r\nconst addMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <div><Field component={Textarea}\r\n          validate={[required,maxLength50]}\r\n          name=\"newMessageBody\"\r\n          placeholder=\"Enter message:\" />\r\n        </div>\r\n        <div><button >Send</button></div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: \"dialogAddMessageForm\" })(addMessageForm)\r\n*/"],"names":["DialogItem","props","path","id","className","s","to","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","mapStateToPropsForRedirect","state","isAuth","auth","DialogsContainer","compose","connect","dialogsPage","dispatch","sendMessage","newMessageBody","sendMessageCreator","Component","RedirectComponent","this","React","dialogsElements","dialogsData","map","item","i","messagesElements","messagesData","values"],"sourceRoot":""}